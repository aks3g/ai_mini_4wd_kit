/*
 *  @(#) $Id: ai_mini4wd.cfg  $
 */

/*
 *    AiMini4wdドライバのコンフィギュレーションファイル
 */
#include "../../arch/arm_m_gcc/samd51x/ai_mini4wd_cfg.h"

// Analog Comparators
ATT_ISR({ TA_NULL, 1, IRQ_AC, isr_ac, 1});
CFG_INT(IRQ_AC, { TA_ENAINT|INTATR_AC, INTPRI_AC });

// ADC0_1
ATT_ISR({ TA_NULL, 1, IRQ_ADC0_1, isr_adc0_1, 1 });
CFG_INT(IRQ_ADC0_1, { TA_ENAINT|INTATR_ADC0_1, INTPRI_ADC0_1 });

// DMAC0-4
ATT_ISR({ TA_NULL, 1, IRQ_DMAC_0, isr_dmac0, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_DMAC_1, isr_dmac1, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_DMAC_2, isr_dmac2, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_DMAC_3, isr_dmac3, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_DMAC_4, isr_dmac4, 1 });
CFG_INT(IRQ_DMAC_0, { TA_ENAINT|INTATR_DMAC0, INTPRI_DMAC0 });
CFG_INT(IRQ_DMAC_1, { TA_ENAINT|INTATR_DMAC1, INTPRI_DMAC1 });
CFG_INT(IRQ_DMAC_2, { TA_ENAINT|INTATR_DMAC2, INTPRI_DMAC2 });
CFG_INT(IRQ_DMAC_3, { TA_ENAINT|INTATR_DMAC3, INTPRI_DMAC3 });
CFG_INT(IRQ_DMAC_4, { TA_ENAINT|INTATR_DMAC4, INTPRI_DMAC4 });

// EIC0-15
ATT_ISR({ TA_NULL, 1, IRQ_EIC_0,  isr_eic0,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_1,  isr_eic1,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_2,  isr_eic2,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_3,  isr_eic3,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_4,  isr_eic4,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_5,  isr_eic5,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_6,  isr_eic6,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_7,  isr_eic7,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_8,  isr_eic8,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_9,  isr_eic9,  1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_10, isr_eic10, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_11, isr_eic11, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_12, isr_eic12, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_13, isr_eic13, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_14, isr_eic14, 1 });
ATT_ISR({ TA_NULL, 1, IRQ_EIC_15, isr_eic15, 1 });
CFG_INT(IRQ_EIC_0,  { TA_ENAINT|INTATR_EIC0,  INTPRI_EIC0  });
CFG_INT(IRQ_EIC_1,  { TA_ENAINT|INTATR_EIC1,  INTPRI_EIC1  });
CFG_INT(IRQ_EIC_2,  { TA_ENAINT|INTATR_EIC2,  INTPRI_EIC2  });
CFG_INT(IRQ_EIC_3,  { TA_ENAINT|INTATR_EIC3,  INTPRI_EIC3  });
CFG_INT(IRQ_EIC_4,  { TA_ENAINT|INTATR_EIC4,  INTPRI_EIC4  });
CFG_INT(IRQ_EIC_5,  { TA_ENAINT|INTATR_EIC5,  INTPRI_EIC5  });
CFG_INT(IRQ_EIC_6,  { TA_ENAINT|INTATR_EIC6,  INTPRI_EIC6  });
CFG_INT(IRQ_EIC_7,  { TA_ENAINT|INTATR_EIC7,  INTPRI_EIC7  });
CFG_INT(IRQ_EIC_8,  { TA_ENAINT|INTATR_EIC8,  INTPRI_EIC8  });
CFG_INT(IRQ_EIC_9,  { TA_ENAINT|INTATR_EIC9,  INTPRI_EIC9  });
CFG_INT(IRQ_EIC_10, { TA_ENAINT|INTATR_EIC10, INTPRI_EIC10 });
CFG_INT(IRQ_EIC_11, { TA_ENAINT|INTATR_EIC11, INTPRI_EIC11 });
CFG_INT(IRQ_EIC_12, { TA_ENAINT|INTATR_EIC12, INTPRI_EIC12 });
CFG_INT(IRQ_EIC_13, { TA_ENAINT|INTATR_EIC13, INTPRI_EIC13 });
CFG_INT(IRQ_EIC_14, { TA_ENAINT|INTATR_EIC14, INTPRI_EIC14 });
CFG_INT(IRQ_EIC_15, { TA_ENAINT|INTATR_EIC15, INTPRI_EIC15 });


// SERCOM3 - sensor i2c
ATT_ISR({ TA_NULL, 1, IRQ_SERCOM3_0, isr_sercom3_0, 1 });
CFG_INT(IRQ_SERCOM3_0, { TA_ENAINT|INTATR_SERCOM3_0, INTPRI_SERCOM3_0 });
ATT_ISR({ TA_NULL, 1, IRQ_SERCOM3_1, isr_sercom3_1, 1 });
CFG_INT(IRQ_SERCOM3_1, { TA_ENAINT|INTATR_SERCOM3_1, INTPRI_SERCOM3_1 });

// SERCOM2 - external i2c
ATT_ISR({ TA_NULL, 1, IRQ_SERCOM2_0, isr_sercom2_0, 1 });
CFG_INT(IRQ_SERCOM2_0, { TA_ENAINT|INTATR_SERCOM2_0, INTPRI_SERCOM2_0 });
ATT_ISR({ TA_NULL, 1, IRQ_SERCOM2_1, isr_sercom2_1, 1 });
CFG_INT(IRQ_SERCOM2_1, { TA_ENAINT|INTATR_SERCOM2_1, INTPRI_SERCOM2_1 });


// TC0 - 1ms timer
ATT_ISR({ TA_NULL, 1, IRQ_TC0, isr_tc0, 1 });
CFG_INT(IRQ_TC0, { TA_ENAINT|INTATR_TC0, INTPRI_TC0 });

// TC2 - tachometer
ATT_ISR({ TA_NULL, 1, IRQ_TC1, isr_tc2, 1 });
CFG_INT(IRQ_TC1, { TA_ENAINT|INTATR_TC2, INTPRI_TC2 });


