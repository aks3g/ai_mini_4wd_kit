# Sample Name: 013_running.py
# 概要: 自己位置を推定しながらマシンを走らせます。自己位置に応じた速度設定
#       を、arr_policyに基づいて行います。
#
# Copyright 2019 Kiyotaka Akasaka. All rights reserved.
#
import mini4wd
import math
import gc


arr_map = [8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,5,5,5,6,5,2,4,8,7,6,8,4,4,8,5,4,4,4,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,4,8,7,5,4,4,4,4,4,4,4,4,8,8,8,8,8,8,8,8,8,8,8,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,8,8,8,8,8,8,8,5,5,5,5,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8,4,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,8,8,8,3,8,7,5,2,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,1,1,8,5,5,8,8,8,8,8,5,5,5,5,8,8,8,8,8,8,5,6,5,5,5,5,5,5,5,1,1,1,4,5,7,8,3,8,5,4,4,8,7,5,5,5,5,5,5,5,5,5,5,8,8,8,8,8,8,4,4,4,4,4,4,8,8,8,8,8,8,5,8,4,4,8,8,8,8,8,8,8,8,5,8,8,4,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,1,1,8,4,2,2,2,2,2,2,3,4,2,4,4,4,4,3,3,2,1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,6,6,6,6,8,4,8,6,7,8,8,4,8,6,8,4,3,3,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,4,8,7,5,3,3,3,3,3,3,3,3,3,2,8,8,8,8,8,8,8,8,8,8,8,2,3,3,3,3,3,3,3,3,3,3,3,2,8,8,8,8,8,8,8,8,8,8,8,7,6,6,5,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,8,4,8,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,8,8,8,2,8,7,7,8,3,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,1,1,8,7,5,5,5,8,5,5,6,6,5,8,8,8,8,8,6,7,6,6,6,6,6,5,1,1,2,8,7,7,8,2,7,8,4,2,6,6,6,6,6,6,6,6,6,5,8,8,8,8,8,8,4,3,3,3,3,3,3,2,8,8,8,8,8,8,6,8,4,8,7,8,8,8,8,8,8,6,5,8,4,8,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,8,8,1,1,1,2,2,8,8,8,3,8,8,2,3,2,2,2,8,2,3,2,2,2,2,2,1,1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,8,4,4,8,7,6,8,4,3,8,5,2,3,2,2,8,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,8,8,8,4,7,7,8,4,2,2,2,2,2,2,2,2,2,2,8,8,8,8,8,8,8,8,8,8,8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,8,8,8,8,8,8,8,8,8,8,8,7,7,7,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,8,4,2,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,4,8,7,5,4,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,1,1,1,7,7,6,5,5,6,7,7,8,8,8,8,8,7,7,7,7,7,7,1,1,1,4,8,7,5,3,8,7,4,4,8,7,7,7,7,7,7,7,5,8,8,8,8,8,8,4,2,2,2,2,2,2,2,2,8,8,8,8,8,8,8,5,4,4,8,6,1,8,8,8,8,2,8,2,8,8,6,5,8,8,8,1,1,1,8,8,8,8,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,1,1,2,4,4,3,2,2,4,4,4,4,4,4,4,4,1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,5,5,5,5,6,8,4,8,7,7,8,2,4,8,5,2,4,4,8,8,8,8,8,1,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,3,8,7,5,4,4,4,4,4,4,4,4,8,8,8,8,8,8,8,8,8,8,8,4,4,4,4,4,4,4,4,4,4,8,8,8,8,8,8,8,8,8,8,8,5,5,5,5,5,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,8,4,8,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,8,8,8,4,8,7,8,4,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,1,1,1,8,6,8,8,8]
arr_policy=[23.5039,23.2949,23.1528,22.9961,22.8881,22.9043,22.8718,22.8263,22.6486,21.3444,21.2567,20.8762,20.2408,19.6004,18.9199,18.7394,18.5799,18.4389,18.338,19.3879,19.3432,19.6369,20.1675,20.8006,20.9207,20.8246,21.0483,20.6572,19.7483,19.1221,18.0067,17.7894,16.222,15.3226,15.0495,15.0199,14.6379,13.6647,12.606,11.1913,10.3757,10.1469,11.2766,11.6909,12.3554,12.4502,12.5686,13.8416,15.6646,17.2127,18.6244,18.5414,18.7464,18.9381,18.6353,18.2251,18.4744,18.175,18.5282,19.2151,19.9357,20.6276,21.0534,21.4976,22.1394,22.8418,22.9152,23.2882,23.3347,23.0567,23.0451,22.7348,22.3476,21.764,20.8343,19.6623,19.0566,18.7709,18.6751,18.8434,18.7639,18.9797,19.2482,19.6693,20.4111,21.4254,21.8589,22.2353,22.1492,22.0833,21.9861,21.9176,21.8392,21.798,21.762,21.1584,21.1737,21.2016,21.2009,20.9333,20.661,20.699,20.7284,20.7747,20.8439,21.4922,21.2373,21.0286,19.8362,19.6262,18.4507,17.4539,17.2585,16.004,15.7514,15.7843,15.5077,15.7323,15.8935,16.4691,17.0104,18.0557,17.5166,18.7757,19.04,19.0158,19.5776,19.2823,19.7304,19.0662,19.4878,19.0994,19.7853,19.7054,19.3227,18.6499,18.306,18.0829,18.3905,19.0346,19.5944,19.9717,20.0492,20.1313,20.5004,21.1331,21.4578,21.9761,21.7808,21.2611,21.2433,20.7105,20.7097,20.6921,20.1884,19.6947,19.6952,18.6838,19.1681,19.6454,19.6225,20.11,19.7506,19.7262,20.1911,20.6685,20.6638,21.6519,21.6442,21.6351,21.6262,21.6198,21.9451,21.9556,21.9827,22.0159,22.0277,22.0241,22.0026,21.9421,21.8044,20.5022,18.2634,15.9674,13.7894,12.3318,11.6829,11.068,10.217,9.94451,10.0931,10.9385,12.7881,15.1896,17.4968,19.0548,19.7803,20.1634,19.4687,19.8421,19.8559,19.5588,18.9142,17.4872,16.3106,14.1793,12.3373,10.5839,9.97755,9.57147,9.73103,10.1686,11.373,12.5266,13.3427,14.3701,16.1167,18.1109,20.286,20.6591,20.4834,20.7995,20.6446,20.8808,21.1739,21.3392,20.8049,19.5667,19.6201,19.3719,19.4327,19.4998,19.5855,19.6085,19.6253,20.5607,21.2298,22.3026,21.8905,21.7684,19.9141,17.8091,16.1711,15.5884,15.4943,15.3696,15.1861,15.2736,15.472,15.0396,16.5252,18.1852,19.133,19.1388,18.3976,17.316,17.2969,17.3378,17.4819,18.3339,18.7333,19.2209,19.661,19.7285,20.186,20.7113,20.5436,20.6344,20.7075,19.6081,17.9991,16.9124,16.0984,15.579,15.1126,14.9081,13.6342,11.3989,10.6558,10.4954,11.6369,11.7622,12.9018,12.9663,13.6274,14.0177,15.4457,17.8152,18.3532,18.4999,18.7577,19.8272,19.8873,21.0043,21.2785,21.9369,22.2934,22.3759,22.83,24.1646,24.5506,24.6143,24.6358,24.5996,24.5587,24.4078,24.247,24.0866,23.8887,23.695,23.4894,23.2516,23.0212,22.7973,22.6171,22.4325,22.2643,22.0783,21.8575,21.6205,21.3969,21.2355,21.0968,20.9992,20.9323,20.8614,20.7862,20.7607,20.8497,21.0269,20.7218,20.912,21.1114,21.3101,21.5145,21.7565,22.0228,20.9478,20.7943,20.0811,18.7612,18.0012,17.087,16.7066,15.6517,15.1451,14.5442,13.7385,12.9414,12.4093,13.0955,13.0005,12.9653,13.0913,13.1994,12.3674,12.7604,14.4706,15.496,16.8438,18.0508,18.9648,19.9855,20.3189,21.323,22.1959,22.323,22.2954,21.5197,21.5019,21.1997,20.0584,18.3179,17.1726,14.6796,12.9136,12.6893,12.4598,11.8152,10.4803,10.2093,9.99001,11.1936,11.6678,13.8313,15.511,15.5675,15.9783,17.2226,18.1261,17.1428,18.2212,17.7391,18.3841,18.1784,18.7203,18.6476,18.9106,18.8798,19.332,20.6278,20.9178,21.6231,21.6262,22.1205,22.1597,22.4832,22.474,22.7924,22.8305,23.1353,23.1189,23.3941,23.3477,23.2933,23.1906,23.0978,22.9982,22.8673,22.714,22.5339,22.3227,22.0827,21.8196,21.5155,21.1571,20.8013,20.4728,20.1888,19.9705,19.8548,19.5505,19.6464,19.8054,20.052,20.3995,20.757,21.1419,21.1795,21.0,20.9157,21.1235,20.9362,20.9914,19.8625,18.8135,18.0199,17.4665,16.8746,15.225,14.2689,13.1119,12.1711,10.826,10.8268,10.9518,11.8862,11.9631,12.6451,14.5791,15.9104,16.5827,16.0097,16.8568,17.9886,18.8517,18.5278,18.6912,18.5254,18.3194,17.8894,18.3043,19.7956,20.108,19.949,19.9146,19.976,20.2064,20.5909,21.0056,21.4464,21.8565,21.9995,22.3442,22.7062,22.9968,23.2525,23.0474,21.9681,19.5351,18.732,18.095,15.8636,14.6505,12.6329,11.6852,10.5286,10.5204,10.0259,11.8938,12.4188,12.2513,13.9765,14.8767,16.5518,17.3999,18.1557,17.9079,19.4264,19.908,19.713,20.332,20.865,20.898,20.9256,20.7063,20.836,20.9784,20.9872,20.2379,20.6779,20.8566,21.0844,21.3638,21.6492,21.6645,21.6771,22.1735,22.2836,23.1349,23.1172,23.0664,22.1899,19.8461,18.1207,18.2314,17.8919,16.7065,14.7589,14.0891,13.3053,11.9405,11.43,13.1225,14.4868,14.5627,15.0747,16.1447,17.9656,18.5013,19.1447,20.3672,21.2713,21.6924,21.8399,21.7316,21.6625,21.6445,21.7205,21.8555,21.4125,21.5594,21.9633,22.0736,22.1801,22.2674,22.3429,22.3836,22.3854,22.369,23.0025,23.0748,22.6373,21.6668,20.8806,19.4137,17.4823,16.5349,15.7658,15.2962,15.0676,14.3759,14.5116,15.0462,15.1591,15.9823,17.4248,18.0407,18.5157,18.2192,18.1912,18.6751,18.8852,19.2777,19.9441,20.5879,21.1348,21.5935,21.369,21.8755,20.7842,20.1664,20.0292,18.4216,16.8394,14.7137,13.7961,13.1512,12.6783,11.4718,11.2984,9.81646,9.32413,10.2111,11.3044,12.6591,12.987,12.7068,13.1747,14.1152,15.3956,15.9479,16.5064,17.0779,17.3726,18.2449,18.8238,19.4924,19.6923,20.3473,20.621,22.5219,22.9263,22.7193,22.8128,22.8195,22.6535,22.6891,23.1558,23.1287,23.117,22.9612,22.7877,23.2391,23.3858,23.2851,23.3987,23.4838,23.303,23.1393,22.9618,22.4715,22.2689,22.065,21.8496,21.6339,21.4022,21.1594,20.9743,20.8413,20.7911,21.1067,21.1634,21.248,21.3733,21.5214,21.7243,21.9701,22.1772,21.8681,21.5353,21.6947,21.833,21.4422,21.2136,21.2499,20.409,19.0366,18.3203,17.3335,16.7386,15.7285,14.5222,14.0501,13.0029,11.7615,12.0933,12.2865,12.5928,13.0703,13.1415,13.8395,14.402,15.1726,16.3633,17.5425,18.0463,19.2423,19.7187,20.8012,21.9832,22.3984,22.1954,21.5372,20.8702,21.1466,20.6729,18.9202,17.8987,15.5002,13.8034,11.6026,11.9408,11.5112,9.9978,8.47626,7.67954,8.72124,9.70857,12.0631,12.7647,14.2707,14.7911,15.32,17.1268,17.194,17.7587,18.2166,18.2374,18.2585,18.8456,19.4588,19.4769,19.6724,19.6558,20.989,21.7565,22.0804,22.1019,22.1318,22.4436,22.4652,22.4787,23.089,23.7024,23.7054,23.7132,23.6645,23.6463,23.5909,23.4959,23.3491,23.1863,23.0033,22.8148,22.628,22.468,22.3213,22.1702,22.075,22.0565,22.0974,22.1269,22.1719,22.1582,22.1076,22.08,22.0371,21.9774,21.878,21.7639,21.6318,21.5146,21.4255,21.4296,21.4776,21.4929,20.9986,20.0122,18.9907,18.4534,18.3857,17.8688,17.266,17.2674,17.3047,17.1006,17.7346,18.9045,19.3248,19.7662,18.7694,18.2035,16.7297,16.4454,16.2759,16.1528,16.1948,15.8457,16.6169,16.0668,16.2415,16.6269,16.9891,16.4315,15.5583,15.2674,14.14,13.2682,12.2066,12.0253,12.518,12.5401,13.4664,13.5101,14.281,14.7628,15.6476,16.7377,17.7491,18.723,19.3704,20.2866,21.3583,21.9081,22.4374,22.8701,22.3036,22.2894,22.0331,20.335,18.3329,15.1944,13.5989,12.7106,12.3122,10.1443,9.88883,9.07736,8.96968,10.4421,11.8382,14.6444,15.8534,16.8531,16.4789,17.5662,18.2259,18.519,18.2624,17.8035,17.9141,17.72,17.5111,17.6052,17.7345,18.1864,18.4303,18.977,19.5364,20.1545,20.5114,20.6474,21.1482,20.8699,21.4104,21.9834,22.1856,22.0739,21.768,20.4147,19.9231,19.2179,18.6845,19.1564,18.1047,18.0366,16.4103,16.1382,14.1593,14.5978,14.6342,15.1523,14.6149,14.584,15.2613,14.2965,15.8427,16.0081,18.105,19.0828,19.5691,20.0851,21.1358,21.1452,21.4261,22.3205,22.3077,22.6045,22.8351,22.7446,22.5909,22.3715,22.1441,21.8651,20.7101,19.6134,19.026,18.2289,17.7123,17.2752,17.2444,17.2691,17.2162,16.5828,16.8985,17.6956,18.0269,18.595,18.9923,19.3815,19.15,18.304,17.0429,16.792,17.0281,16.8038,15.3521,14.3836,13.688,13.9153,13.631,12.9796,12.5186,13.8362,13.6576,13.4848,13.9117,13.9615,12.1614,9.99716,9.57642,11.2057,12.7137,12.5456,13.0582,12.7837,12.7893,13.4503,14.8761,16.4346,17.0855,15.9102,15.681,15.2469,14.8337,15.8993,17.2984,17.8672,18.9115,18.7282,18.7794,19.5401,20.3944,20.6868,21.5512,21.6182,21.6896,21.4946,21.8285,22.6686,23.2131,23.783,23.7206,23.9294,23.7768,23.6525,23.4456,23.5257,23.3096,23.0773,22.8465,22.6253,22.4227,22.2441,22.1141,21.9967,21.9238,21.8579,21.8333,21.8156,21.8143,21.8137,21.7998,21.7861,21.7774,21.7654,21.7559,21.7526,21.7598,21.8256,22.0053,21.9055,21.3398,21.2711,20.9378,21.1308,21.3014,21.427,21.214,20.7612,20.6537,20.8534,21.0283,21.2011,21.6239,21.5059,21.4293,21.3929,21.6784,22.1396,22.1374,22.0533,21.9793,21.9308,21.5869,21.27,20.926,20.8612,20.8025,20.748,20.4306,20.1661,20.6988,20.6914,20.9869,21.2684,21.0518,20.5578,20.0639,19.5671,19.3297,19.0962,19.0617,18.5527,18.0489,18.0453,18.0483,18.5508,19.0531,19.5565,20.062,20.5685,20.5744,21.0746,21.5726,21.5698,22.0661,22.064,22.0614,22.0605,22.0607,22.0591,22.0612,22.0626,22.0666,22.0707,22.0743,22.0769,22.0789,22.0797,22.0797,22.0767,21.7788,21.1958,21.2021,21.2147,20.2243,19.9376,19.9248,19.9206,19.9132,19.8956,20.1631,20.7078,20.6462,20.569,21.4953,21.7177,21.6807,21.6389,21.5736,21.523,21.5184,21.5378,21.5849,21.6572,21.7389,21.475,21.1913,21.2262,21.2982,20.3409,19.8954,19.3403,19.0695,18.4763,17.6803,16.1424,16.2022,14.6554,13.9243,14.0298,13.7836,13.1303,13.1787,13.3344,13.6586,15.5807,14.309,14.9116,15.6611,16.6185,17.3525,18.6051,18.7969,18.862,18.5824,17.2377,18.1214,18.8394,18.5824,18.304,18.1163,17.9845,17.8684,18.1517,18.5209,19.7947,20.4517,20.7201,21.0511,21.3963,21.7026,21.6816,21.6546,21.139,20.3014,19.4056,18.7519,18.0329,16.3611,15.2045,13.5643,12.9466,11.5364,10.3836,9.28553,9.18294,8.88889,8.33697,9.50446,9.86869,10.9712,11.6035,13.3803,15.3134,17.7662,18.951,20.0588,21.4402,21.424,21.6734,21.8911,22.129,22.0639,21.9836,21.9025,21.8053,21.7198,21.6251,22.0481,22.4831,22.7363,22.9842,23.501,23.9636,24.4061,24.7954,25.1481,25.4686,25.7855,26.0496,26.2036,26.0195,25.5064,24.9909,24.5358,24.149,23.9134,23.7357]

UNIT_mm = 100;
TIRE_SIZE_mm = 31
INTERVAL_sec = 1.0/52.0
COEFF_DELTA  = (1.0 / 60.0) * INTERVAL_sec * TIRE_SIZE_mm * 3.14
COEFF_DEGREE = (1.0 / 1000.0) * INTERVAL_sec

CENTER_TO_OUTER_LEFT  = 620
INNER_TO_CENTER_LEFT  = 510
INNER_TO_CENTER_RIGHT = -510
CENTER_TO_OUTER_RIGHT = -620

FEATURE_UPDOWN = 1;
FEATURE_OUT_LEFT = 2; 
FEATURE_CENTER_LEFT = 3;
FEATURE_IN_LEFT = 4;
FEATURE_OUT_RIGHT = 5;
FEATURE_CENTER_RIGHT = 6;
FEATURE_IN_RIGHT = 7;
FEATURE_STRAIGHT = 8

def feature_value(delta_mm, yaw_degree, pitch_degree):

	if yaw_degree != 0:
		radius = (delta_mm / (yaw_degree/360)) / (2 * 3.1415);
	else:
		radius = 0;

	if pitch_degree > 3.0 :
		feature = FEATURE_UPDOWN;
	elif CENTER_TO_OUTER_LEFT <= radius and radius < 800.0:
		feature = FEATURE_OUT_LEFT
	elif INNER_TO_CENTER_LEFT <= radius and radius < CENTER_TO_OUTER_LEFT:
		feature = FEATURE_CENTER_LEFT;
	elif 300.0 <= radius and radius < INNER_TO_CENTER_LEFT:
		feature = FEATURE_IN_LEFT;
	elif INNER_TO_CENTER_RIGHT <= radius and radius < -300.0:
		feature = FEATURE_IN_RIGHT;
	elif CENTER_TO_OUTER_RIGHT <= radius and radius < INNER_TO_CENTER_RIGHT:
		feature = FEATURE_CENTER_RIGHT;
	elif -800 <= radius and radius < CENTER_TO_OUTER_RIGHT:
		feature = FEATURE_OUT_RIGHT;
	else :
		feature = FEATURE_STRAIGHT;

	return feature;

def evaluation_value(az, roll):
	eva = 0;

#	if az > 3000 :
#	if az < 0 :
#		eva = eva - 2.5;

	if math.fabs(roll) > 30000:
#		eva = eva - 5.0; log018まで
		eva = eva - 3.0;

	return eva;


def convertTo_degree(mdps) :
	if math.fabs(mdps) < 10000.0:
		return 0.0
	else:
		return mdps * COEFF_DEGREE


# ミニ四駆制御器を作る
m = mini4wd.Machine();

# マシンのタイヤ直径を31㎜に変更
m.setTireSize(TIRE_SIZE_mm)

# PID制御のゲインを設定
m.setGainKp(0.1)
m.setGainKi(0.02)
m.setGainKd(0.02)


# 位置推定器を作る
spe = mini4wd.SelfPositionEstimater(2000, 100);

# 特徴量マップを読み込む
for i in range(len(arr_map)):
	spe.push_map_item(arr_map[i]);

spe.set_weight(0.001)
spe.prepare()

# 機械学習器を生成
# 引数
# 1. マップのサイズ
# 2. 報酬が伝搬数する範囲
# 3. 学習1回ごとの全体の速度の上昇値
# 4. 時定数（秒）
# 5. マップの1ますごとの距離(mm)
# 6. 初期速度(km/h)
ml = mini4wd.MachineLearning(len(arr_map), int(1000/UNIT_mm), 1.0, 0.5, UNIT_mm, 10.0);
if len(arr_policy) != 0 :
	for i in range(len(arr_policy)) :
		ml.set_policy(i, arr_policy[i]);

f = 0;
pos = 0;
delta_mm = 0;
pitch_degree = 0;
yaw_degree = 0;
radius = 0;
feature = 0;
x = 0;
x_p = 0;
direction = 0;
lap = 0
milage = 0;

m.led(1)

# 車軸が少し回転するのを待つ
m.waitIntTrig()

m.led(2)

# 立ち上がりは全力で走る
m.setDuty(255)

# 1分走るか、3周したら終わる
while milage < 120000 and lap < 3 :
	# 1/52秒待ち/センサデータの更新
	m.grab()

	delta_mm     = m.getRpm() * COEFF_DELTA;
	yaw_degree   = convertTo_degree(m.getYaw());
	pitch_degree = m.getPitch() * COEFF_DEGREE;

	direction = direction + yaw_degree;

	x_p = x;
	x = x + delta_mm * math.cos(math.radians(direction));
	if x_p < 0 and x >= 0:
		lap = lap + 1;

	feature = feature_value(delta_mm, yaw_degree, pitch_degree);
	evaluation = evaluation_value(m.getAz(), m.getRoll());

	pos = spe.estimate(delta_mm, feature);
	m.setSpeed(ml.get_policy(pos));

	print (m);
	milage = milage + delta_mm;

m.led(3)
m.setDuty(0)
